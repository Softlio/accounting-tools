// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  password      String
  firstName     String?
  lastName      String?
  role          Role     @default(USER)
  tools         ToolAccess[]
  preferences   Preference[]
  payments      Payment[]
  logEvents     LogEvent[]
  active        Boolean  @default(true)
  firstLogin    Boolean  @default(true)
}

model Tool {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  slug          String @unique
  name          String
  description   String?
  tags          String[]
  userAccess    ToolAccess[]
}

model ToolAccess {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  toolId        String  @db.ObjectId
  userId        String  @db.ObjectId
  access        Boolean @default(false)
  user          User    @relation(fields: [userId], references: [id])
  tool          Tool    @relation(fields: [toolId], references: [id])
}

model Preference {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId        String  @db.ObjectId
  user          User    @relation(fields: [userId], references: [id])
  key           String
  value         String
}

model Settings {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  key           String @unique
  value         String
}

model IncomeTaxCalculation {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  paymentId     String  @db.ObjectId @unique
  payment       Payment @relation(fields: [paymentId], references: [id])
  
  //Values
  revenue       Float
  year          Int
  workedMoreThan1225Hours Boolean
  eligibleForStarterDeduction Boolean
  hadSalariedEmployment Boolean
  annualIncome  Float @default(0)
  taxWithheld   Float @default(0)
}

model TempIncomTaxCalculation {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  //Values
  revenue       Float
  year          Int
  workedMoreThan1225Hours Boolean
  eligibleForStarterDeduction Boolean
  hadSalariedEmployment Boolean
  annualIncome  Float @default(0)
  taxWithheld   Float @default(0)
}

model Payment {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  mollieId      String  @unique
  userId        String?  @db.ObjectId
  user          User?    @relation(fields: [userId], references: [id])
  createdAt     DateTime
  amount        String
  currency      String
  description   String?
  method        String?
  metadata      Json?
  status        String?
  expiresAt     DateTime?
  checkoutUrl   String?
  incomeTaxCalculation IncomeTaxCalculation?
  paidAt        DateTime?
}

enum LogEventType {
  LOGIN
  GENERATE_INCOME_TAX_CALCULATION
  PAYMENT_CREATED
  PAYMENT_REVIEVED
  DOWNLOAD
  NAVIGATE
  LOGOUT
  ACCOUNT_CREATED
  ACCOUNT_UPDATED
  ACCOUNT_DELETED
  TOOL_ACCESS
}

model LogEvent {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId        String?  @db.ObjectId
  user          User?    @relation(fields: [userId], references: [id])
  type          LogEventType
  data          Json?
  createdAt     DateTime @default(now())
}